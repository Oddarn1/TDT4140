{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","constants/roles.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","db","ref","users","app","initializeApp","database","_ref","type","onClick","HOME","ADMIN","EMPLOYEE","USER","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","_this2","listener","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","Link","to","ROUTES","includes","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","set","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignIn","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","PasswordChangeForm","PasswordChange","AdminPage","i","length","isAdmin","checked","isEmployee","child","update","loading","on","usersObject","usersList","keys","map","off","_this3","index","defaultChecked","userList","UserList","BrowserRouter","components_Navigation","Route","path","component","SignInPage","AccountPage","HomePage","Boolean","window","location","hostname","match","ReactDOM","render","context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c843f6b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext=React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase}/>}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nexport const config = {\r\n    apiKey: \"AIzaSyB75ISkhork5Z_-6Gp-oVq4iHA7zC2zuZ4\",\r\n    authDomain: \"finnutdanning.firebaseapp.com\",\r\n    databaseURL: \"https://finnutdanning.firebaseio.com\",\r\n    projectId: \"finnutdanning\",\r\n    storageBucket: \"finnutdanning.appspot.com\",\r\n    messagingSenderId: \"903452096243\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor(){\r\n        app.initializeApp(config);\r\n\r\n        this.auth=app.auth();\r\n        this.db=app.database();\r\n    }\r\n\r\n    // Auth API\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n        this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n        this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n    doPasswordUpdate = password =>\r\n        this.auth.currentUser.updatePassword(password);\r\n\r\n    //Merge Auth and DB User API\r\n\r\n    onAuthUserListener = (next, fallback) =>\r\n        this.auth.onAuthStateChanged(authUser => {\r\n            if (authUser) {\r\n                this.user(authUser.uid)\r\n                    .once('value')\r\n                    .then(snapshot => {\r\n                        const dbUser = snapshot.val();\r\n\r\n                        // default empty roles\r\n                        if (!dbUser.roles) {\r\n                            dbUser.roles = [];\r\n                        }\r\n\r\n                        // merge auth and db user\r\n                        authUser = {\r\n                            uid: authUser.uid,\r\n                            email: authUser.email,\r\n                            ...dbUser,\r\n                        };\r\n\r\n                        next(authUser);\r\n                    });\r\n            } else {\r\n                fallback();\r\n            }\r\n        });\r\n\r\n    // User API\r\n\r\n    user=uid=>this.db.ref('users/' + uid);\r\n\r\n    users = () => this.db.ref('users');\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, {withFirebase} from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext,withFirebase };","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n    <button type=\"button\" onClick={firebase.doSignOut}>\r\n        Sign Out\r\n    </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';","export const ADMIN='ADMIN';\r\nexport const EMPLOYEE='EMPLOYEE';\r\nexport const USER='USER';","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport {withFirebase} from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n    class WithAuthentication extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                authUser: null,\r\n            };\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.onAuthUserListener(\r\n                authUser => {\r\n                    this.setState({ authUser });\r\n                },\r\n                () => {\r\n                    this.setState({ authUser: null });\r\n                },\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <AuthUserContext.Provider value={this.state.authUser}>\r\n                    <Component {...this.props} />\r\n                </AuthUserContext.Provider>\r\n            );\r\n        }\r\n    }\r\n\r\n    return withFirebase(WithAuthentication);\r\n};\r\n\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n    class WithAuthorization extends React.Component {\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.onAuthUserListener(\r\n                authUser => {\r\n                    if (!condition(authUser)) {\r\n                        this.props.history.push(ROUTES.SIGN_IN);\r\n                    }\r\n                },\r\n                () => this.props.history.push(ROUTES.SIGN_IN),\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <AuthUserContext.Consumer>\r\n                    {authUser =>\r\n                        condition(authUser) ? <Component {...this.props} /> : null\r\n                    }\r\n                </AuthUserContext.Consumer>\r\n            );\r\n        }\r\n    }\r\n\r\n    return compose(\r\n        withRouter,\r\n        withFirebase,\r\n    )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport * as ROLES from '../../constants/roles';\r\nimport {AuthUserContext} from '../Session';\r\n\r\nconst Navigation = ()=>(\r\n    <AuthUserContext.Consumer>\r\n        {authUser =>\r\n            authUser ?\r\n                <NavigationAuth authUser={authUser}/>\r\n                :\r\n                <NavigationNonAuth/>}\r\n        </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({authUser}) => (\r\n        <ul>\r\n            <li>\r\n                <Link to={ROUTES.LANDING}>Landing</Link>\r\n            </li>\r\n            <li>\r\n                <Link to={ROUTES.HOME}>Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n            </li>\r\n            {authUser.roles.includes(ROLES.ADMIN) && (\r\n                <li>\r\n                    <Link to={ROUTES.ADMIN}>Admin</Link>\r\n                </li>\r\n            )}\r\n            <li>\r\n                <SignOutButton/>\r\n            </li>\r\n        </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n      <li>\r\n          <Link to={ROUTES.LANDING}> Landing </Link>\r\n      </li>\r\n      <li>\r\n          <Link to={ROUTES.SIGN_IN}> Sign In </Link>\r\n      </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport {withFirebase} from '../Firebase';\r\nimport {compose} from 'recompose';\r\n\r\nimport * as ROLES from '../../constants/roles';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignUpPage= () => (\r\n    <div>\r\n        <h1>SignUp</h1>\r\n        <SignUpForm/>\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={...INITIAL_STATE};\r\n    }\r\n\r\n\r\n    onSubmit = event =>{\r\n        const { username, email, passwordOne } = this.state;\r\n        const roles =[];\r\n\r\n        roles.push(ROLES.USER);\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                return this.props.firebase\r\n                    .user(authUser.user.uid)\r\n                    .set({\r\n                        username,\r\n                        email,\r\n                        roles,\r\n                    });\r\n            })\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            username === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Full Name\"\r\n                />\r\n                <input\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Email Address\"\r\n                />\r\n                <input\r\n                    name=\"passwordOne\"\r\n                    value={passwordOne}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <input\r\n                    name=\"passwordTwo\"\r\n                    value={passwordTwo}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                />\r\n\r\n                <button type=\"submit\" disabled={isInvalid}>Sign Up</button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n    <p>\r\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n    </p>\r\n);\r\n\r\nconst SignUpForm=compose(\r\n    withRouter,\r\n    withFirebase,\r\n    )(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport {SignUpForm,SignUpLink};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n    <div>\r\n        <h1>PasswordForget</h1>\r\n        <PasswordForgetForm />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email } = this.state;\r\n\r\n        this.props.firebase\r\n            .doPasswordReset(email)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { email, error } = this.state;\r\n\r\n        const isInvalid = email === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Email Address\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">\r\n                    Reset My Password\r\n                </button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n    <p>\r\n        <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n    </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport {PasswordForgetLink} from \"../PasswordForget\";\r\n\r\nconst SignInPage = () => (\r\n    <div>\r\n        <h1>SignIn</h1>\r\n        <SignInForm />\r\n        <PasswordForgetLink/>\r\n        <SignUpLink />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email, password } = this.state;\r\n\r\n        this.props.firebase\r\n            .doSignInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { email, password, error } = this.state;\r\n\r\n        const isInvalid = password === '' || email === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Email Address\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">\r\n                    Sign In\r\n                </button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignInForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","import React from 'react';\r\n\r\nimport { withAuthorization } from '../Session';\r\n\r\nconst HomePage = () => (\r\n    <div>\r\n        <h1>Home Page</h1>\r\n        <p>The Home Page is accessible by every signed in user.</p>\r\n    </div>\r\n);\r\n\r\nconst condition = authUser => ! !authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { passwordOne } = this.state;\r\n\r\n        this.props.firebase\r\n            .doPasswordUpdate(passwordOne)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    name=\"passwordOne\"\r\n                    value={passwordOne}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"New Password\"\r\n                />\r\n                <input\r\n                    name=\"passwordTwo\"\r\n                    value={passwordTwo}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm New Password\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">\r\n                    Reset My Password\r\n                </button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\n\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\nimport {AuthUserContext, withAuthorization } from '../Session';\r\n\r\nconst AccountPage = () => (\r\n    <AuthUserContext.Consumer>\r\n        {authUser=> (\r\n    <div>\r\n        <h1>Account: {authUser.email} </h1>\r\n        <h1>Roles:  {authUser.roles}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n    </div>\r\n        )}\r\n    </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => ! !authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\r\nimport {compose} from 'recompose';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport {withAuthorization} from '../Session';\r\nimport * as ROLES from '../../constants/roles';\r\n\r\nclass AdminPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            users: [],\r\n            error: null,\r\n        };\r\n\r\n        this.isAdmin=[];\r\n        this.isEmployee=[];\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n\r\n        this.props.firebase.users().on('value', snapshot => {\r\n            const usersObject = snapshot.val();\r\n\r\n            const usersList = Object.keys(usersObject).map(key => ({\r\n                ...usersObject[key],\r\n                uid: key,\r\n            }));\r\n\r\n            this.setState({\r\n                users: usersList,\r\n                loading: false,\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    componentWillUnmount(){\r\n        this.props.firebase.users().off();\r\n    }\r\n\r\n    onSubmit = () =>{\r\n        for (let i=0;i<this.state.users.length;i++){\r\n            const roles=[];\r\n            roles.push(ROLES.USER);\r\n            if (this.isAdmin[i].checked){\r\n                roles.push(ROLES.ADMIN);\r\n            }\r\n            if(this.isEmployee[i].checked){\r\n                roles.push(ROLES.EMPLOYEE);\r\n            }\r\n            this.props.firebase.users().ref.child(this.state.users[i].uid).update({\r\n                roles,\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    UserList ({users}){\r\n        return (\r\n        <ul>\r\n            {users.map((user,index) => (\r\n                <li key={user.uid}>\r\n        <span>\r\n          <strong>ID:</strong> {user.uid}\r\n        </span>\r\n                    <span>\r\n          <strong>E-Mail:</strong> {user.email}\r\n        </span>\r\n                    <span>\r\n          <strong>Username:</strong> {user.username}\r\n        </span>\r\n                    <span>\r\n                    <strong>Roles:</strong> {user.roles}\r\n                </span>\r\n                    <span>\r\n                <label>\r\n                    Admin:\r\n                    <input\r\n                        name=\"isAdmin\"\r\n                        type=\"checkbox\"\r\n                        ref={(ref) => this.isAdmin[index] = ref}\r\n                        defaultChecked={user.roles.includes(ROLES.ADMIN)}\r\n                    />\r\n                </label>\r\n                </span>\r\n                    <span>\r\n                <label>\r\n                    Employee:\r\n                    <input\r\n                            name=\"isEmployee\"\r\n                            type=\"checkbox\"\r\n                            ref={(ref) => this.isEmployee[index] = ref}\r\n                            defaultChecked={user.roles.includes(ROLES.EMPLOYEE)}\r\n                        />\r\n                </label>\r\n                </span>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { users, loading } = this.state;\r\n        const userList= this.UserList({users});\r\n\r\n        return (\r\n            <div>\r\n                <h1>Admin</h1>\r\n                <p>\r\n                    The Admin page is accessible by every signed in admin user.\r\n                </p>\r\n                {loading && <div>Loading ...</div>}\r\n                <div ref=\"ListUsers\">{userList}</div>\r\n                {this.state.error}\r\n                <button type=\"submit\" onClick={this.onSubmit}>Submit Changes</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst condition = authUser =>\r\n    authUser && authUser.roles.includes(ROLES.ADMIN);\r\n\r\nexport default compose(\r\n    withAuthorization(condition),\r\n    withFirebase,\r\n)(AdminPage);","import React from 'react';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\n\r\nimport Navigation from '../Navigation';\r\n//import LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport {withAuthentication} from '../Session';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <div>\r\n            <Navigation />\r\n\r\n            <hr />\r\n\r\n            {/*<Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n            */}\r\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n            <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage}/>\r\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n            <Route path={ROUTES.HOME} component={HomePage} />\r\n            <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\nimport Firebase, {FirebaseContext} from './components/Firebase';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <FirebaseContext.Provider value = {new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}